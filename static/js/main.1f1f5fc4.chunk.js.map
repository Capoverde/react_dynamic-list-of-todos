{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","setTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","selectFilter","selectInputFilter","selectedFilter","selectedInputFilter","onClickHandle","onChange","value","placeholder","style","pointerEvents","length","Loader","TodoModal","chosenTodo","closeModal","useState","loadingUser","setLoadingUser","userError","setUserError","user","setUser","useEffect","loadUser","a","userId","fetchedUser","Error","message","href","email","name","App","setTodos","loadingTodos","setLoadingTodos","error","setError","completedFilters","setCompletedFilters","inputFilter","setInputFilter","loadTodos","loadedTodos","filteredTodos","useMemo","filter","to","matchesCompletedFilter","matchesInputFilter","toLowerCase","includes","event","target","e","trimStart","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f1f5fc4.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[] | null;\n  setTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setTodo, selectedTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos?.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={cn({\n            // eslint-disable-next-line\n            'has-background-info-light'\n            : selectedTodo?.id === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn('far', {\n                    'fa-eye': !(selectedTodo?.id === todo.id),\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","// type Props = {\n//   selectFilter: (e: React.ChangeEvent<HTMLSelectElement>) => void,\n//   selectInputFilter: (e: React.ChangeEvent<HTMLInputElement>) => void\n//   selectedFilter: 'all' | 'active' | 'completed';\n//   selectedInpputFilter: string;\n//   onClickHandle: () => void;\n// };\n\n// export const TodoFilter = ({\n//   selectFilter,\n//   selectInputFilter,\n//   selectedFilter,\n//   selectedInpputFilter,\n//   onClickHandle,\n// }: Props) => (\n//   <form className=\"field has-addons\">\n//     <p className=\"control\">\n//       <span className=\"select\">\n//         <select\n//           data-cy=\"statusSelect\"\n//           onChange={selectFilter}\n//           value={selectedFilter}\n//         >\n//           <option value=\"all\">All</option>\n//           <option value=\"active\">Active</option>\n//           <option value=\"completed\">Completed</option>\n//         </select>\n//       </span>\n//     </p>\n\n//     <p className=\"control is-expanded has-icons-left has-icons-right\">\n//       <input\n//         data-cy=\"searchInput\"\n//         type=\"text\"\n//         className=\"input\"\n//         placeholder=\"Search...\"\n//         onChange={selectInputFilter}\n//         value={selectedInpputFilter}\n//       />\n//       <span className=\"icon is-left\">\n//         <i className=\"fas fa-magnifying-glass\" />\n//       </span>\n\n//       <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n//         {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n//         {selectedInpputFilter.length > 0 && (\n//           // eslint-disable-next-line jsx-a11y/control-has-associated-label\n//           <button\n//             data-cy=\"clearSearchButton\"\n//             type=\"button\"\n//             className=\"delete\"\n//             onClick={onClickHandle}\n//           />\n\n//         )}\n//       </span>\n//     </p>\n//   </form>\n// );\n\ntype Props = {\n  selectFilter: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  selectInputFilter: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selectedFilter: 'all' | 'active' | 'completed';\n  selectedInputFilter: string;\n  onClickHandle: () => void;\n};\n\nexport const TodoFilter = ({\n  selectFilter,\n  selectInputFilter,\n  selectedFilter,\n  selectedInputFilter,\n  onClickHandle,\n}: Props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={selectFilter}\n          value={selectedFilter}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={selectInputFilter}\n        value={selectedInputFilter}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {selectedInputFilter.length > 0 && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onClickHandle}\n          >\n            delete\n          </button>\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","// import React, { useEffect, useState } from 'react';\n// import { Loader } from '../Loader';\n// import { User } from '../../types/User';\n// import { Todo } from '../../types/Todo';\n// import { getUser } from '../../api';\n\n// type Props = {\n//   chosenTodo: Todo | null;\n//   closeModal: () => void;\n// };\n\n// export const TodoModal: React.FC<Props> = ({\n//   chosenTodo,\n//   closeModal,\n// }) => {\n//   const [loadingUser, setLoadingUser] = useState(false);\n//   const [userError, setUserError] = useState(false);\n//   const [user, setUser] = useState<User | null>(null);\n\n//   useEffect(() => {\n//     const loadUser = async () => {\n//       setLoadingUser(true);\n//       setUserError(false);\n//       setUser(null);\n\n//       if (chosenTodo) {\n//         getUser(chosenTodo?.userId).then(setUser).catch(e => {\n//           setUserError(e.message);\n//         }).finally(() => setLoadingUser(false));\n//       }\n//     };\n\n//     loadUser();\n//   }, [chosenTodo]);\n\n//   return (\n//     <div className=\"modal is-active\" data-cy=\"modal\">\n//       <div className=\"modal-background\" />\n//       {userError && <p>{userError}</p>}\n//       {loadingUser && <Loader />}\n//       {user && (\n//         <div className=\"modal-card\">\n//           <header className=\"modal-card-head\">\n//             <div\n//               className=\"modal-card-title has-text-weight-medium\"\n//               data-cy=\"modal-header\"\n//             >\n//               {`Todo #${chosenTodo?.id}`}\n//             </div>\n\n//             {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n//             <button\n//               type=\"button\"\n//               className=\"delete\"\n//               data-cy=\"modal-close\"\n//               onClick={() => closeModal()}\n//             />\n//           </header>\n\n//           <div className=\"modal-card-body\">\n//             <p className=\"block\" data-cy=\"modal-title\">\n//               {chosenTodo?.title}\n//             </p>\n\n//             <p className=\"block\" data-cy=\"modal-user\">\n//               {chosenTodo?.completed\n//                 ? <strong className=\"has-text-success\">Done</strong>\n//                 : <strong className=\"has-text-danger\">Planned</strong>}\n\n//               {' by '}\n\n//               <a href={`mailto:${user.email}`}>\n//                 {user.name}\n//               </a>\n//             </p>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  chosenTodo: Todo | null;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  chosenTodo,\n  closeModal,\n}) => {\n  const [loadingUser, setLoadingUser] = useState<boolean>(false);\n  const [userError, setUserError] = useState<string | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      setLoadingUser(true);\n      setUserError(null);\n      setUser(null);\n\n      if (chosenTodo) {\n        try {\n          const fetchedUser = await getUser(chosenTodo.userId);\n\n          setUser(fetchedUser);\n        } catch (e) {\n          if (e instanceof Error && e.message) {\n            setUserError(e.message);\n          } else {\n            setUserError('An error occurred while fetching user data.');\n          }\n        } finally {\n          setLoadingUser(false);\n        }\n      }\n    };\n\n    loadUser();\n  }, [chosenTodo]);\n\n  return (\n    <div className={`modal ${user ? 'is-active' : ''}`} data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userError && <p>{userError}</p>}\n      {loadingUser && <Loader />}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosenTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            >\n              close\n            </button>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {chosenTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {chosenTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport type CompletedFilter = 'all' | 'active' | 'completed';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n  const [loadingTodos, setLoadingTodos] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [completedFilters, setCompletedFilters]\n  = useState<CompletedFilter>('all');\n  const [inputFilter, setInputFilter] = useState<string>('');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      setLoadingTodos(true);\n      setError(false);\n\n      try {\n        const loadedTodos = await getTodos();\n\n        setTodos(loadedTodos);\n      } catch (e) {\n        setError(true);\n      } finally {\n        setLoadingTodos(false);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const selectTodo = (chosenTodo: Todo) => {\n    const selectedTodo = todos?.find((to) => to.id === chosenTodo.id);\n\n    setTodo(selectedTodo || null);\n  };\n\n  const selectCompletedFilter\n   = (event: React.ChangeEvent<HTMLSelectElement>) => {\n     setCompletedFilters(event.target.value as CompletedFilter);\n   };\n\n  const selectInputFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputFilter(e.target.value.trimStart().toLowerCase());\n  };\n\n  const closeModal = () => {\n    setTodo(null);\n  };\n\n  const onClickHandle = () => {\n    setInputFilter('');\n  };\n\n  const filteredTodos = useMemo(() => {\n    if (!todos) {\n      return null;\n    }\n\n    return todos.filter((to) => {\n      const matchesCompletedFilter\n      = completedFilters === 'all'\n       || (completedFilters === 'active' && !to.completed)\n       || (completedFilters === 'completed' && to.completed);\n\n      const matchesInputFilter\n      = !inputFilter || to.title.toLowerCase().includes(inputFilter);\n\n      return matchesCompletedFilter && matchesInputFilter;\n    });\n  }, [completedFilters, inputFilter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectFilter={selectCompletedFilter}\n                selectInputFilter={selectInputFilter}\n                selectedFilter={completedFilters}\n                selectedInputFilter={inputFilter}\n                onClickHandle={onClickHandle}\n              />\n            </div>\n\n            <div className=\"block\">\n              {error && <p>{error}</p>}\n              {loadingTodos && <Loader />}\n\n              {!loadingTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                  setTodo={selectTodo}\n                  selectedTodo={todo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && <TodoModal chosenTodo={todo} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}